get:
  summary: Retrieve Musics
  description: "Retrieve musics from the database given matching filters, if no filters are provided, all musics are returned, available filters are: partial_title, title(s), id(s), partial_lyrics, album(s), album(s) id(s), artist(s), artist(s) id(s)"
  parameters:
    - name: title
      in: query
      schema:
        type: array
        items:
          type: string
      description: Music title
    - name: partial_title
      in: query
      schema:
        type: string
      description: Partial music title
    - name: music_id
      in: query
      schema:
        type: array
        items:
          type: integer
      description: Music ID
    - name: partial_lyrics
      in: query
      schema:
        type: string
      description: Partial music lyrics
    - name: album
      in: query
      schema:
        type: array
        items:
          type: string
      description: Albums titles
    - name: album_id
      in: query
      schema:
        type: array
        items:
          type: integer
      description: Album ID
    - name: artist
      in: query
      schema:
        type: array
        items:
          type: string
      description: Artists names
    - name: artist_id
      in: query
      schema:
        type: array
        items:
          type: integer
      description: Artist ID
  responses:
    200:
      description: Musics retrieved successfully
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../../components/schemas/music.yaml'
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
post:
  summary: Create a new music
  description: Create a new music in the database given a title, lyrics, release date, album ID, artist(s) ID(s) and genres
  requestBody:
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            illustration:
              type: string
              description: Music illustration
              format: binary
            music:
              type: string
              description: Music file
              format: binary
            title:
              type: string
              description: Music title
            artist_id:
              type: array
              items:
                type: integer
              description: Artist ID
            lyrics:
              type: string
              description: Music lyrics
            release_date:
              type: string
              format: date
              description: Music release date
            album_id:
              type: integer
              description: Album ID
            genre:
              type: array
              items:
                type: string
              description: Music genres
          required:
            - music
            - title
            - artist_id
  responses:
    201:
      description: Music created successfully
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/music.yaml'
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    409:
      description: Conflict
      content:
        application/json:
          schema:
              $ref: '../../../components/schemas/error.yaml'
delete:
  summary: Delete Musics
  description: "Delete musics from the database given matching ids"
  parameters:
    - name: id
      in: query
      required: true
      schema:
        type: array
        items:
          type: integer
      description: Musics Ids
  responses:
    204:
      description: No Content
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
