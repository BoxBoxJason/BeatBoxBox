get:
  summary: Retrieve Playlists
  description: "Retrieve playlists from the database using filters, if no filters are provided, all playlists will be returned. Available filters are: title(s), id(s), owners_ids, owners_names musics_ids"
  parameters:
    - in: query
      name: titles
      schema:
        type: array
        items:
          type: string
      description: The titles of the playlists
    - in: query
      name: ids
      schema:
        type: array
        items:
          type: integer
      description: The ids of the playlists
    - in: query
      name: owners_ids
      schema:
        type: array
        items:
          type: integer
      description: The ids of the owners of the playlist
    - in: query
      name: owners_names
      schema:
        type: array
        items:
          type: string
      description: The usernames of the owners of the playlist
    - in: query
      name: musics_ids
      schema:
        type: array
        items:
          type: integer
      description: The ids of the musics in the playlist
  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../../components/schemas/playlist.yaml'
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
post:
  summary: Create a playlist
  description: Create a new playlist
  requestBody:
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            title:
              type: string
              description: The title of the playlist
            description:
              type: string
              description: The description of the playlist
            public:
              type: boolean
              description: Whether the playlist is public or not
            illustration:
              type: string
              format: binary
              description: The illustration of the playlist
            musics_ids:
              type: array
              items:
                type: integer
              description: The ids of the musics in the playlist
            owners_ids:
              type: array
              items:
                type: integer
              description: The ids of the owners of the playlist
            protected:
                type: boolean
                description: Whether the playlist is protected or not
          required:
            - title
            - owners_ids
  responses:
    201:
      description: Created
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/playlist.yaml'
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
