get:
  summary: Retrieve albums
  description: "Retrieve albums from the database given matching filters, if no filters are provided, all albums are returned, available filters are: title(s), album_id(s), partial_title(s), artist(s) name(s), artist(s) id(s), music(s) title(s), music(s) id(s), genre(s)"
  parameters:
    - in: query
      name: title
      schema:
        type: array
        items:
          type: string
      description: Albums titles
    - in: query
      name: partial_title
      schema:
        type: array
        items:
          type: string
      description: Partial albums titles
    - in: query
      name: album_id
      schema:
        type: array
        items:
          type: integer
      description: Albums ids
    - in: query
      name: artist
      schema:
        type: array
        items:
          type: string
      description: Artists names
    - in: query
      name: artists_id
      schema:
        type: array
        items:
          type: integer
      description: Artists ids
    - in: query
      name: music
      schema:
        type: array
        items:
          type: string
      description: Musics titles
    - in: query
      name: music_id
      schema:
        type: array
        items:
          type: integer
      description: Musics ids
    - name: genre
      in: query
      schema:
        type: array
        items:
          type: string
      description: Album genres
  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
                $ref: "../../../components/schemas/album.yaml"
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
post:
  summary: Create a new album
  description: "Create a new album in the database"
  requestBody:
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            title:
              type: string
              description: Album title
            artist_id:
              type: array
              items:
                type: integer
              description: Artists ids
            illustration:
              type: string
              format: binary
              description: Album cover
            description:
              type: string
              description: Album description
            genre:
              type: array
              items:
                type: string
              description: Album genres
          required:
            - title
            - artist_id
  responses:
    201:
      description: Created
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/album.yaml"
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
    409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
delete:
  summary: Delete Albums
  description: Delete albums that match the provided ids from the database
  parameters:
    - in: query
      name: id
      schema:
        type: array
        items:
          type: integer
      description: Albums ids
  responses:
    204:
      description: No Content
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../../../components/schemas/error.yaml'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/error.yaml"
